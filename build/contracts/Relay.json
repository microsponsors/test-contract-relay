{
  "contractName": "Relay",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dr",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "initAddr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "update",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/test-contract-relay/contracts/Relay.sol\":\"Relay\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/test-contract-relay/contracts/Relay.sol\":{\"keccak256\":\"0x182440c4a55309ab4f7faa2c0f6dfa6b567c730341ced84f7096398ed7e232e3\",\"urls\":[\"bzzr://ee8d9d9c00bba47eaf8b314746c7559f309d462a7b7bc7d14737365ac818aef5\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610623833981018060405261002f91908101906100ca565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610125565b60006100c282516100f3565b905092915050565b6000602082840312156100dc57600080fd5b60006100ea848285016100b6565b91505092915050565b60006100fe82610105565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6104ef806101346000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631c1b8772146100515780633af32abf1461006d5780638da5cb5b1461009d578063a469eb11146100bb575b600080fd5b61006b600480360361006691908101906102d4565b6100d9565b005b610087600480360361008291908101906102d4565b6101ae565b60405161009491906103ae565b60405180910390f35b6100a5610261565b6040516100b29190610393565b60405180910390f35b6100c3610287565b6040516100d091906103c9565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561016b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610162906103e4565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633af32abf836040518263ffffffff1660e01b815260040161020a9190610393565b60206040518083038186803b15801561022257600080fd5b505afa158015610236573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061025a91908101906102fd565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006102b88235610453565b905092915050565b60006102cc8251610465565b905092915050565b6000602082840312156102e657600080fd5b60006102f4848285016102ac565b91505092915050565b60006020828403121561030f57600080fd5b600061031d848285016102c0565b91505092915050565b61032f81610415565b82525050565b61033e81610427565b82525050565b61034d81610491565b82525050565b6000610360600e83610404565b91507f4e4f545f415554484f52495a45440000000000000000000000000000000000006000830152602082019050919050565b60006020820190506103a86000830184610326565b92915050565b60006020820190506103c36000830184610335565b92915050565b60006020820190506103de6000830184610344565b92915050565b600060208201905081810360008301526103fd81610353565b9050919050565b600082825260208201905092915050565b600061042082610433565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061045e82610471565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061049c826104a3565b9050919050565b60006104ae82610433565b905091905056fea265627a7a72305820befe210706b060abf15c78325d2f5d2196a663d6d2e9666be50ed7e2411c63ca6c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80631c1b8772146100515780633af32abf1461006d5780638da5cb5b1461009d578063a469eb11146100bb575b600080fd5b61006b600480360361006691908101906102d4565b6100d9565b005b610087600480360361008291908101906102d4565b6101ae565b60405161009491906103ae565b60405180910390f35b6100a5610261565b6040516100b29190610393565b60405180910390f35b6100c3610287565b6040516100d091906103c9565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561016b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610162906103e4565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633af32abf836040518263ffffffff1660e01b815260040161020a9190610393565b60206040518083038186803b15801561022257600080fd5b505afa158015610236573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061025a91908101906102fd565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006102b88235610453565b905092915050565b60006102cc8251610465565b905092915050565b6000602082840312156102e657600080fd5b60006102f4848285016102ac565b91505092915050565b60006020828403121561030f57600080fd5b600061031d848285016102c0565b91505092915050565b61032f81610415565b82525050565b61033e81610427565b82525050565b61034d81610491565b82525050565b6000610360600e83610404565b91507f4e4f545f415554484f52495a45440000000000000000000000000000000000006000830152602082019050919050565b60006020820190506103a86000830184610326565b92915050565b60006020820190506103c36000830184610335565b92915050565b60006020820190506103de6000830184610344565b92915050565b600060208201905081810360008301526103fd81610353565b9050919050565b600082825260208201905092915050565b600061042082610433565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061045e82610471565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061049c826104a3565b9050919050565b60006104ae82610433565b905091905056fea265627a7a72305820befe210706b060abf15c78325d2f5d2196a663d6d2e9666be50ed7e2411c63ca6c6578706572696d656e74616cf50037",
  "sourceMap": "265:722:1:-;;;470:127;8:9:-1;5:2;;;30:1;27;20:12;5:2;470:127:1;;;;;;;;;;;;;;;;;;;;;;552:8;530:2;;:31;;;;;;;;;;;;;;;;;;579:10;571:5;;:18;;;;;;;;;;;;;;;;;;470:127;265:722;;5:122:-1;;83:39;114:6;108:13;83:39;;;74:48;;68:59;;;;;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;364:6;353:9;349:22;317:64;;;307:74;;279:108;211:186;;;;;404:105;;473:31;498:5;473:31;;;462:42;;456:53;;;;516:128;;596:42;589:5;585:54;574:65;;568:76;;;;265:722:1;;;;;;;",
  "deployedSourceMap": "265:722:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;265:722:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;603:161;;;;;;;;;;;;;;;;:::i;:::-;;771:213;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;319:20;;;:::i;:::-;;;;;;;;;;;;;;;;287:26;;;:::i;:::-;;;;;;;;;;;;;;;;603:161;690:5;;;;;;;;;;;676:19;;:10;:19;;;668:46;;;;;;;;;;;;;;;;;;;;;;;;746:10;724:2;;:33;;;;;;;;;;;;;;;;;;603:161;:::o;771:213::-;855:4;952:2;;;;;;;;;;;:16;;;969:6;952:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;952:24:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;952:24:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;952:24:1;;;;;;;;;945:31;;771:213;;;:::o;319:20::-;;;;;;;;;;;;;:::o;287:26::-;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:116;;205:36;233:6;227:13;205:36;;;196:45;;190:56;;;;;253:241;;357:2;345:9;336:7;332:23;328:32;325:2;;;373:1;370;363:12;325:2;408:1;425:53;470:7;461:6;450:9;446:22;425:53;;;415:63;;387:97;319:175;;;;;501:257;;613:2;601:9;592:7;588:23;584:32;581:2;;;629:1;626;619:12;581:2;664:1;681:61;734:7;725:6;714:9;710:22;681:61;;;671:71;;643:105;575:183;;;;;765:120;848:31;873:5;848:31;;;843:3;836:44;830:55;;;892:111;969:28;991:5;969:28;;;964:3;957:41;951:52;;;1010:172;1116:60;1170:5;1116:60;;;1111:3;1104:73;1098:84;;;1190:364;;1350:67;1414:2;1409:3;1350:67;;;1343:74;;1450:66;1446:1;1441:3;1437:11;1430:87;1545:2;1540:3;1536:12;1529:19;;1336:218;;;;1562:213;;1680:2;1669:9;1665:18;1657:26;;1694:71;1762:1;1751:9;1747:17;1738:6;1694:71;;;1651:124;;;;;1782:201;;1894:2;1883:9;1879:18;1871:26;;1908:65;1970:1;1959:9;1955:17;1946:6;1908:65;;;1865:118;;;;;1990:259;;2131:2;2120:9;2116:18;2108:26;;2145:94;2236:1;2225:9;2221:17;2212:6;2145:94;;;2102:147;;;;;2256:407;;2447:2;2436:9;2432:18;2424:26;;2497:9;2491:4;2487:20;2483:1;2472:9;2468:17;2461:47;2522:131;2648:4;2522:131;;;2514:139;;2418:245;;;;2671:163;;2786:6;2781:3;2774:19;2823:4;2818:3;2814:14;2799:29;;2767:67;;;;;2842:105;;2911:31;2936:5;2911:31;;;2900:42;;2894:53;;;;2954:92;;3034:5;3027:13;3020:21;3009:32;;3003:43;;;;3053:128;;3133:42;3126:5;3122:54;3111:65;;3105:76;;;;3188:105;;3257:31;3282:5;3257:31;;;3246:42;;3240:53;;;;3300:92;;3380:5;3373:13;3366:21;3355:32;;3349:43;;;;3399:128;;3479:42;3472:5;3468:54;3457:65;;3451:76;;;;3534:167;;3636:60;3690:5;3636:60;;;3623:73;;3617:84;;;;3708:138;;3810:31;3835:5;3810:31;;;3797:44;;3791:55;;;",
  "source": "pragma solidity ^0.5.5;\npragma experimental ABIEncoderV2;\n\n\n// Copy of old original Deployed Registry contract ABI\n// We just the signatures of the parts we need to interact with:\ncontract DeployedRegistry {\n\n    mapping (address => bool) public isWhitelisted;\n\n}\n\ncontract Relay {\n\n    DeployedRegistry public dr;\n    address public owner;\n\n    // Initialize the Relay by passing address of original Deployed Registry\n    // See `/migrations/2_deploy_contracts.js`\n    constructor(address initAddr)\n        public\n    {\n\n        dr = DeployedRegistry(initAddr);\n        owner = msg.sender;\n\n    }\n\n    function update(address newAddress)\n        public\n    {\n        require(msg.sender == owner, 'NOT_AUTHORIZED');\n        dr = DeployedRegistry(newAddress);\n    }\n\n\n    function isWhitelisted(address target)\n        public\n        view\n        returns (bool)\n    {\n\n        // Checks original Registry contract for whitelisted status:\n        return dr.isWhitelisted(target);\n\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/test-contract-relay/contracts/Relay.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/test-contract-relay/contracts/Relay.sol",
    "exportedSymbols": {
      "DeployedRegistry": [
        64
      ],
      "Relay": [
        119
      ]
    },
    "id": 120,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 64,
        "linearizedBaseContracts": [
          64
        ],
        "name": "DeployedRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 63,
            "name": "isWhitelisted",
            "nodeType": "VariableDeclaration",
            "scope": 64,
            "src": "213:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 62,
              "keyType": {
                "id": 60,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "222:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "213:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 61,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "233:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          }
        ],
        "scope": 120,
        "src": "180:83:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 119,
        "linearizedBaseContracts": [
          119
        ],
        "name": "Relay",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 66,
            "name": "dr",
            "nodeType": "VariableDeclaration",
            "scope": 119,
            "src": "287:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DeployedRegistry_$64",
              "typeString": "contract DeployedRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 65,
              "name": "DeployedRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 64,
              "src": "287:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                "typeString": "contract DeployedRegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 68,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 119,
            "src": "319:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 67,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "319:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "519:78:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 73,
                      "name": "dr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "530:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                        "typeString": "contract DeployedRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 75,
                          "name": "initAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "552:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 74,
                        "name": "DeployedRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "535:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DeployedRegistry_$64_$",
                          "typeString": "type(contract DeployedRegistry)"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "535:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                        "typeString": "contract DeployedRegistry"
                      }
                    },
                    "src": "530:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                      "typeString": "contract DeployedRegistry"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "530:31:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "571:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "579:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "579:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "571:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "571:18:1"
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "name": "initAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "482:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "481:18:1"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "519:0:1"
            },
            "scope": 119,
            "src": "470:127:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "658:106:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 91,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "676:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "676:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 93,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "690:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "676:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e4f545f415554484f52495a4544",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "697:16:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                          "typeString": "literal_string \"NOT_AUTHORIZED\""
                        },
                        "value": "NOT_AUTHORIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                          "typeString": "literal_string \"NOT_AUTHORIZED\""
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        137,
                        138
                      ],
                      "referencedDeclaration": 138,
                      "src": "668:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "668:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "668:46:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "dr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "724:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                        "typeString": "contract DeployedRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 100,
                          "name": "newAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "746:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 99,
                        "name": "DeployedRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "729:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DeployedRegistry_$64_$",
                          "typeString": "type(contract DeployedRegistry)"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "729:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                        "typeString": "contract DeployedRegistry"
                      }
                    },
                    "src": "724:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                      "typeString": "contract DeployedRegistry"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "724:33:1"
                }
              ]
            },
            "documentation": null,
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "619:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "618:20:1"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:0:1"
            },
            "scope": 119,
            "src": "603:161:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "865:119:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 114,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "969:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "dr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "952:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                          "typeString": "contract DeployedRegistry"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isWhitelisted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63,
                      "src": "952:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "952:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 111,
                  "id": 116,
                  "nodeType": "Return",
                  "src": "945:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "794:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "793:16:1"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "855:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "854:6:1"
            },
            "scope": 119,
            "src": "771:213:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 120,
        "src": "265:722:1"
      }
    ],
    "src": "0:988:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/test-contract-relay/contracts/Relay.sol",
    "exportedSymbols": {
      "DeployedRegistry": [
        64
      ],
      "Relay": [
        119
      ]
    },
    "id": 120,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 64,
        "linearizedBaseContracts": [
          64
        ],
        "name": "DeployedRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 63,
            "name": "isWhitelisted",
            "nodeType": "VariableDeclaration",
            "scope": 64,
            "src": "213:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 62,
              "keyType": {
                "id": 60,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "222:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "213:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 61,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "233:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          }
        ],
        "scope": 120,
        "src": "180:83:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 119,
        "linearizedBaseContracts": [
          119
        ],
        "name": "Relay",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 66,
            "name": "dr",
            "nodeType": "VariableDeclaration",
            "scope": 119,
            "src": "287:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DeployedRegistry_$64",
              "typeString": "contract DeployedRegistry"
            },
            "typeName": {
              "contractScope": null,
              "id": 65,
              "name": "DeployedRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 64,
              "src": "287:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                "typeString": "contract DeployedRegistry"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 68,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 119,
            "src": "319:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 67,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "319:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "519:78:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 73,
                      "name": "dr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "530:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                        "typeString": "contract DeployedRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 75,
                          "name": "initAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "552:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 74,
                        "name": "DeployedRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "535:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DeployedRegistry_$64_$",
                          "typeString": "type(contract DeployedRegistry)"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "535:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                        "typeString": "contract DeployedRegistry"
                      }
                    },
                    "src": "530:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                      "typeString": "contract DeployedRegistry"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "530:31:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "571:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "579:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "579:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "571:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "571:18:1"
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "name": "initAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "482:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "481:18:1"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "519:0:1"
            },
            "scope": 119,
            "src": "470:127:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "658:106:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 91,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "676:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "676:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 93,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "690:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "676:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e4f545f415554484f52495a4544",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "697:16:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                          "typeString": "literal_string \"NOT_AUTHORIZED\""
                        },
                        "value": "NOT_AUTHORIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                          "typeString": "literal_string \"NOT_AUTHORIZED\""
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        137,
                        138
                      ],
                      "referencedDeclaration": 138,
                      "src": "668:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "668:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "668:46:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "dr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "724:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                        "typeString": "contract DeployedRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 100,
                          "name": "newAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "746:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 99,
                        "name": "DeployedRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "729:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DeployedRegistry_$64_$",
                          "typeString": "type(contract DeployedRegistry)"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "729:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                        "typeString": "contract DeployedRegistry"
                      }
                    },
                    "src": "724:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                      "typeString": "contract DeployedRegistry"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "724:33:1"
                }
              ]
            },
            "documentation": null,
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "619:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "618:20:1"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:0:1"
            },
            "scope": 119,
            "src": "603:161:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "865:119:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 114,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "969:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "dr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "952:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeployedRegistry_$64",
                          "typeString": "contract DeployedRegistry"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isWhitelisted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63,
                      "src": "952:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "952:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 111,
                  "id": 116,
                  "nodeType": "Return",
                  "src": "945:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "794:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "793:16:1"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "855:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "854:6:1"
            },
            "scope": 119,
            "src": "771:213:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 120,
        "src": "265:722:1"
      }
    ],
    "src": "0:988:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {
    "1565323768201": {
      "events": {},
      "links": {},
      "address": "0x870D15D2dBDcd16642F8af9a56289b91aa4ca5FA",
      "transactionHash": "0xe6dcec7499bdb63e94f162e1add6e7b61ac16843b5e143c6db542370c3b055a5"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-08-10T02:10:31.760Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}